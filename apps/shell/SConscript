import os

from SCons.Environment import Environment
from scons_scripts.utility import glob_recursive


Import('TARGET_ENVIRONMENT')
TARGET_ENVIRONMENT: Environment

env = TARGET_ENVIRONMENT.Clone()
env.Append(
    CCFLAGS=[
        '-fpic'
    ],

    LINKFLAGS = [
        '-Wl,-T', env.File('linker.ld').srcnode().path,
        '-Wl,-Map=' + env.File('shell.map').path
    ],

    CPPPATH = [ 
        env.Dir('.').srcnode(),
        env['PROJECTDIR'].Dir('src/libs/include')
    ],

    ASFLAGS = [ '-I', env.Dir('.').srcnode(), '-f', 'elf32' ]
)

# Add boot.s to the sources
sources = glob_recursive(env, '*.c') + \
          glob_recursive(env, '*.cpp') + \
          glob_recursive(env, '*.asm')

headers = glob_recursive(env, '*.h') + \
          glob_recursive(env, '*.hpp') + \
          glob_recursive(env, '*.inc')

objects = env.Object(sources)

Import('libcore')

static_libs = [
    libcore
]

objects = [
    *objects,
    *static_libs,
]

shell = env.Program('shell.elf', objects)
Export('shell')
Default(shell)