import os

from SCons.Environment import Environment
from scons_scripts.utility import glob_recursive, find_index, is_file_name


Import('TARGET_ENVIRONMENT')
TARGET_ENVIRONMENT: Environment

env = TARGET_ENVIRONMENT.Clone()
env.Append(
    LINKFLAGS = [
        '-Wl,-T', env.File('linker.ld').srcnode().path,
        '-Wl,-Map=' + env.File('kernel.map').path,
    ],

    CPPPATH = [ 
        env.Dir('.').srcnode(),
        env['PROJECTDIR'].Dir('src/libs/include')
    ],

    ASFLAGS = [ '-I', env.Dir('.').srcnode(), '-f', 'elf' ]
)

# Add boot.s to the sources
sources = glob_recursive(env, '*.c') + \
          glob_recursive(env, '*.cpp') + \
          glob_recursive(env, '*.asm')

objects = env.Object(sources)

Import('libcore')

static_libs = [
    libcore
]

objects = [
    *objects,
    *static_libs
]

kernel = env.Program('kernel.elf', objects)
kernel_stripped = env.Command('kernel-stripped.elf', kernel, '$STRIP -o $TARGET $SOURCE')

env.Default(kernel_stripped)

Export('kernel')
Export('kernel_stripped')